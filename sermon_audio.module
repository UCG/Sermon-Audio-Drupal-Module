<?php

/**
 * @file
 * Sermon Audio hook implementations.
 */

declare (strict_types = 1);

use Drupal\Component\Utility\Html;
use Drupal\file\FileInterface;

/**
 * Implements hook_cron().
 */
function sermon_audio_cron() : void {
  // Automatically refresh sermon audio wherever applicable.
  $ids = \Drupal::entityTypeManager()->getStorage('sermon_audio')->getQuery()
    ->condition('processing_initiated', TRUE)
    ->condition('processed_audio', NULL, 'IS NULL')
    ->condition('unprocessed_audio.entity', NULL, 'IS NOT NULL')
    ->execute();
  $queue = \Drupal::queue('sermon_audio_refresher');
  foreach ($ids as $id) {
    $queue->createItem((int) $id);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function sermon_audio_preprocess_file_link(array &$variables) : void {
  if (!empty($variables['sermon_audio_suppress_link'])) {
    $file = $variables['file'];
    if (!($file instanceof FileInterface)) {
      throw new \RuntimeException('Invalid file_link theme hook #file variable.');
    }
    // In this case, we don't want to show an actual link to the file. Hence,
    // override the "link" variable with the sanitized plain-text filename (it
    // should be sanitized by Twig automatically, but we do so here just in case
    // a template is used which suppresses this sanitization, etc).
    $variables['link'] = Html::escape($file->getFilename());
  }
}

/**
 * Implements hook_theme().
 */
function sermon_audio_theme() : array {
  return [
    'sermon_audio_player_no_processed_audio' => [
      'variables' => ['was_processing_initiated' => NULL],
      'template' => 'sermon-audio-player-no-processed-audio',
    ],
    'sermon_audio_player_broken_processed_audio' => [
      'template' => 'sermon-audio-player-broken-processed-audio',
    ],
    'sermon_audio_link_no_processed_audio' => [
      'variables' => ['was_processing_initiated' => NULL],
      'template' => 'sermon-audio-link-no-processed-audio',
    ],
    'sermon_audio_link_broken_processed_audio' => [
      'template' => 'sermon-audio-link-broken-processed-audio',
    ],
  ];
}

/**
 * Implements hook_theme_registry_alter().
 */
function sermon_audio_theme_registry_alter(array &$registry) : void {
  // Add a "sermon_audio_suppress_link" variable to the set of "file_link" theme
  // hook variables.
  if (!empty($registry['file_link'])) {
    $registry['file_link']['variables']['sermon_audio_suppress_link'] = NULL;
  }
}
